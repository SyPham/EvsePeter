{"version":3,"file":"selectedpig-grid.component.d.ts","sources":["selectedpig-grid.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, OnInit, SimpleChanges, AfterViewInit, ChangeDetectorRef, OnDestroy } from \"@angular/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { GridComponent } from \"@syncfusion/ej2-angular-grids\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { PigfarmCoreService } from '../../../services';\r\nexport declare class SelectedpigGridComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    private baseUrl;\r\n    private trans;\r\n    private cd;\r\n    private service;\r\n    pigName: any;\r\n    selectedPigDataSource: any;\r\n    recordNextDataSource: any;\r\n    recordNext2DataSource: any;\r\n    searchOptions: {\r\n        fields: string[];\r\n        operator: string;\r\n        ignoreCase: boolean;\r\n    };\r\n    grid: GridComponent;\r\n    avgWeightChange: EventEmitter<any>;\r\n    totalWeightChange: EventEmitter<any>;\r\n    avgAmountChange: EventEmitter<any>;\r\n    totalAmountChange: EventEmitter<any>;\r\n    selectedPigDataSourceChange: EventEmitter<any>;\r\n    maleAvgWeightChange: EventEmitter<any>;\r\n    maleTotalWeightChange: EventEmitter<any>;\r\n    maleTotalSelectedChange: EventEmitter<any>;\r\n    femaleAvgWeightChange: EventEmitter<any>;\r\n    femaleTotalWeightChange: EventEmitter<any>;\r\n    femaleTotalSelectedChange: EventEmitter<any>;\r\n    pageSettings: any;\r\n    visibleNextRoom: boolean;\r\n    visibleNextPen: boolean;\r\n    visibleNext2: boolean;\r\n    visibleButton: boolean;\r\n    visibleNext: boolean;\r\n    visibleAmount: boolean;\r\n    visibleDisease: boolean;\r\n    visibleWeight: boolean;\r\n    visibleValue: boolean;\r\n    visiblePigSex: boolean;\r\n    visibleSourceGuid: boolean;\r\n    visibleSource1Guid: boolean;\r\n    visibleSource2Guid: boolean;\r\n    visibleSource3Guid: boolean;\r\n    visibleSemenConcentration: boolean;\r\n    visibleSemenVolume: boolean;\r\n    visibleMalformationRate: boolean;\r\n    visiblePig: boolean;\r\n    visibleRfid: any;\r\n    valueLabel: string;\r\n    pigLabel: string;\r\n    next1Label: string;\r\n    next2Label: string;\r\n    editSettingsPig: {\r\n        showDeleteConfirmDialog: boolean;\r\n        allowEditing: boolean;\r\n        allowAdding: boolean;\r\n        allowDeleting: boolean;\r\n        mode: string;\r\n    };\r\n    avgWeight: number;\r\n    totalWeight: number;\r\n    totalAmount: number;\r\n    avgAmount: number;\r\n    codeType: any;\r\n    codeType2: any;\r\n    maleAvgWeight: number;\r\n    maleTotalWeight: number;\r\n    maleTotalSelected: number;\r\n    femaleAvgWeight: number;\r\n    femaleTotalWeight: number;\r\n    femaleTotalSelected: number;\r\n    index: any;\r\n    diseaseItem: any;\r\n    recordNext: any;\r\n    recordNextndex: any;\r\n    recordNext2: any;\r\n    recordNextndex2: any;\r\n    recordNext2Item: any;\r\n    recordNextItem: any;\r\n    pigSexItem: any;\r\n    pigSexIndex: any;\r\n    subscription: Subscription;\r\n    nextRoomItem: any;\r\n    nextPenItem: any;\r\n    constructor(baseUrl: any, trans: TranslateService, cd: ChangeDetectorRef, service: PigfarmCoreService);\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    created(): void;\r\n    ngOnInit(): void;\r\n    actionBeginPig(e: any): void;\r\n    onChangeRecordNext(e: any, data: any): void;\r\n    onChangeRecordNext2(e: any, data: any): void;\r\n    onChangePigSex(e: any, data: any): void;\r\n    onChangeDisease(e: any, data: any): void;\r\n    onChangeNextRoom(e: any, data: any): void;\r\n    onChangeNextPen(e: any, data: any): void;\r\n    average: (nums: any, length: any) => number;\r\n    total: (nums: any) => any;\r\n    caculator(): void;\r\n}\r\n"]}