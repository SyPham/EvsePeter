{"version":3,"file":"CURD.service.d.ts","sources":["CURD.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { MessageConstants } from \"../_core/_constants\";\r\nimport { UtilitiesService } from \"../services\";\r\nimport { BaseService } from \"./base.service\";\r\nimport { OperationResult } from \"../_core/models/application-user\";\r\nexport interface ICURDService<T> {\r\n    getAll(): Observable<T[]>;\r\n    getById(id: any): Observable<T>;\r\n    insertWithFormData(model: T): Observable<OperationResult>;\r\n    updateWithFormData(model: T): Observable<OperationResult>;\r\n    add(model: T): Observable<OperationResult>;\r\n    update(model: T): Observable<OperationResult>;\r\n    delete(id: any): Observable<OperationResult>;\r\n    deleterange(ids: object[]): Observable<OperationResult>;\r\n    changeValue(message: MessageConstants): any;\r\n    getAudit(id: any): Observable<any>;\r\n}\r\nexport declare class CURDService<T> extends BaseService implements ICURDService<T> {\r\n    protected env: any;\r\n    protected http: HttpClient;\r\n    protected entity: string;\r\n    protected utilitiesService: UtilitiesService;\r\n    audits: string[];\r\n    protected base: any;\r\n    protected _sharedHeaders: HttpHeaders;\r\n    constructor(env: any, http: HttpClient, entity: string, utilitiesService: UtilitiesService);\r\n    getAll(): Observable<T[]>;\r\n    getById(id: any): Observable<T>;\r\n    insertWithFormData(model: T): Observable<OperationResult>;\r\n    updateWithFormData(model: T): Observable<OperationResult>;\r\n    add(model: T): Observable<OperationResult>;\r\n    addRange(model: T[]): Observable<OperationResult>;\r\n    updateRange(model: T[]): Observable<OperationResult>;\r\n    update(model: T): Observable<OperationResult>;\r\n    updatestatus(id: T): Observable<OperationResult>;\r\n    delete(id: any): Observable<OperationResult>;\r\n    deleterange(ids: object[]): Observable<OperationResult>;\r\n    getAudit(id: any): Observable<T>;\r\n    downloadODSFile(model: any): Observable<import(\"@angular/common/http\").HttpResponse<Blob>>;\r\n    downloadExcelFile(recordGuid: any): Observable<import(\"@angular/common/http\").HttpResponse<Blob>>;\r\n    excelExportRecordSale(p: {\r\n        pigs: any[];\r\n    }): Observable<import(\"@angular/common/http\").HttpResponse<Blob>>;\r\n    downloadBlob(data: any, fileName: any, mimeType: any): void;\r\n}\r\n"]}